buildscript {
    ext {
        gradleVersionProperty = '5.2.1'
        karateVersion = '0.9.5'
        masterThoughtVersion = '5.1.1'
        junitVersion = '4.13'
    }
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }
}

plugins {
    id 'project-report'
    id 'eclipse'
    id 'java'
    id 'idea'
}

project.ext.logDir = "${rootDir}/reports"

group 'org.example'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

sourceSets {
    test {
        java {
            srcDir file('src/test/java')
        }
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

dependencies {
    testCompile 'junit:junit:' + junitVersion
    testCompile 'com.intuit.karate:karate-junit4:' + karateVersion
    testCompile 'com.intuit.karate:karate-apache:' + karateVersion
    testCompile 'net.masterthought:cucumber-reporting:' + masterThoughtVersion
}

task karateExecute(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.intuit.karate.cli.Main'
}

task karateDebug(type: JavaExec) {
    classpath = sourceSets.test.runtimeClasspath
    main = 'com.intuit.karate.cli.Main'
}

test {
    reports.html.enabled = true
    reports.html.setDestination(file("${project.logDir}/html"))

    reports.junitXml.enabled = true
    reports.junitXml.setDestination(file("${project.logDir}/junit"))
    testLogging {
        events "started", "passed", "skipped", "failed"
        // show standard out and standard error of the test JVM(s) on the console
        showStandardStreams = true
        // show full exception trace
        exceptionFormat = 'full'
        showStackTraces = true
        showCauses = true
        showExceptions = true
    }

    include '**/*APITest*'
    // Pull karate options into the runtime
    systemProperty "karate.options", System.properties.getProperty("karate.options")
    // Pull karate options into the JVM
    systemProperty "karate.env", System.properties.getProperty("karate.env")
    // Ensure tests are always run
    outputs.upToDateWhen { false }
    // attach debugger
    if (System.getProperty('debug', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9009'
    }
}

clean.doFirst {
    delete "${rootDir}/target"
    delete "${rootDir}/bin"
    delete "${rootDir}/build"
    delete "${rootDir}/out"
    delete "${rootDir}/reports"
    println "Clean: Deleted bin, build, out, target and reports directories"
}

clean.doLast {
    mkdir  "${rootDir}/reports"
    println "Created reports directory"
}

wrapper {
    gradleVersion = gradleVersionProperty
}